<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	해당 xml파일이 mapper역할을 하기위해 반드시 필요한 Doctype이다.
	공식문서 URL : https://mybatis.org/mybatis-3/configuration.html
 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
Mapper의 namespace속성
	: 해당 매퍼파일을 호출하기 위해 정의한 인터페이스의
	  패키지를 포함한 풀 경로를 기술한다.
	  해당 인터페이스는 컨트롤러와 Mapper(DAO) 사이에서
	  중재자 역할을 하는 서비스 객체로 사용된다.
 -->
<mapper namespace="mybatis.MybatisDAOImpl">
<!-- ### 방명록 1차 버전에서 사용 ### -->
	<!-- 게시물의 개수를 카운트 한 후 정수타입으로 반환한다. -->
	<select id="getTotalCount" resultType="int">
		SELECT COUNT(*) from myboard
	</select>
	<!-- 
	목록에 출력할 게시물을 select한 후 결과는 ArrayList<MyBoardDTO>타입으로 반환한다.
	Mybatis는 레코드 인출을 위한 select계열의 쿼리문을 실행할 경우
	무조건 ArrayList<T>으로 결과를 반환한다.
	 -->
	<!-- 
	[파라미터를 받는 첫번째 방법]	
		인터페이스에 정의된
			listPage(int s, int e)
		메서드 호출시 전달된 파라미터 s, e는 아래와 같이 param1, param2로 전달된다.
		즉, 인파라미터 설정시 필요한 별도의 메서드가 존재하지 않는다.
	 -->
	<select id="listPage" resultType="mybatis.MyBoardDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM myboard ORDER BY idx DESC
			) Tb
		)
		WHERE rNum BETWEEN #{param1} AND #{param2}
	</select>
	
	
	
	<!-- 
		@Param 어노테이션에서 지정한 별칭을 사용하여 인파라미터를 처리한다.
		일련번호는 기존과 동일하게 시퀀스를 통해 입력한다.
		
		insert, update, delete는 적용된 행의 개수를 반환하므로
		반환타입이 무조건 int형이라서 따로 기술하지 않는다.
	 -->
	<insert id="write">
		INSERT INTO myboard (idx, id, name, contents)
		VALUES
		(myboard_seq.nextval, #{_id}, #{_name}, #{_contents})
	</insert>
	
	
	
	<!-- 
		파라미터는 DTO객체에 저장한 후 Mapper로 전달하므로
		parameterType 속성에 해당 DTO객체의 타입을 명시한다.
		EL에서 멤버변수명 만으로 값에 접근할 수 있듯이,
		Mapper에서도 동일하게 getter()에 접근해서 사용할 수 있다.
		조회된 결과는 MyBoardDTO객체에 저장한 후 반환한다.
	 -->
	<select id="view" resultType="mybatis.MyBoardDTO" parameterType="mybatis.ParameterDTO">
		SELECT * FROM myboard WHERE idx=#{board_idx} AND id=#{user_id}
	</select>
	<!-- 
		수정처리.
		전송된 폼값은 커맨드객체를 통해 한꺼번에 전달받으므로
		각 멤버변수의 getter()를 통해 인파라미터를 처리할 수 있다.
	 -->	
	<update id="modify" parameterType="mybatis.MyBoardDTO">
		UPDATE myboard
			SET name=#{name}, contents=#{contents}
			WHERE idx=#{idx} AND id=#{id}
	</update>
	
	
	
	<!-- 
		삭제처리.
		전달되는 파라미터 순으로 param1, param2 형태로 인파라미터를 처리함.
	 -->
	<delete id="delete">
		DELETE FROM myboard WHERE idx=#{param1} AND id=#{param2}
	</delete>
</mapper>